import 'dart:async';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:prestacarro_front/gateway/person_gateway.dart';
import 'package:prestacarro_front/models/person.dart';
import 'package:prestacarro_front/provider/config_model.dart';
import 'package:prestacarro_front/views/index.dart';
import 'package:prestacarro_front/widgets/main_layout.dart';
import 'package:provider/provider.dart';

import 'selection.dart';

class DocumentScan extends StatefulWidget {
  const DocumentScan({Key? key}) : super(key: key);

  @override
  _DocumentScanState createState() => _DocumentScanState();
}

// with WidgetsBindingObserver
class _DocumentScanState extends State<DocumentScan> {
  final FocusNode _focusNode = FocusNode();

  String _chain = "";
  Duration myDuration = Duration(minutes: 2);

  late Person person;
  late PersonGateway personGateway;

  Timer? countdownTimer;

  void startTimer() {
    countdownTimer =
        Timer.periodic(Duration(seconds: 1), (_) => setCountDown());
  }

  // Step 4
  void stopTimer() {
    setState(() => countdownTimer!.cancel());
  }

  void setCountDown() {
    final reduceSecondsBy = 1;
    setState(() {
      final seconds = myDuration.inSeconds - reduceSecondsBy;
      if (seconds < 0) {
        countdownTimer!.cancel();
        Navigator.pushReplacement(
            context, MaterialPageRoute(builder: (context) => Index()));
      } else {
        myDuration = Duration(seconds: seconds);
      }
    });
  }

  @override
  void initState() {
    super.initState();
    final _model = Provider.of<ConfigModel>(context, listen: false);
    startTimer();
    personGateway = new PersonGateway(_model.config.backendBaseUrl);
  }

  @override
  void dispose() {
    _focusNode.dispose();
    stopTimer();
    super.dispose();
  }

  void _handleKeyEvent(RawKeyEvent? event) {
    // We check if the event is realising a key
    if (event is RawKeyDownEvent) {
      // Enter means capturing all the buffered data until then
      if (event.logicalKey == LogicalKeyboardKey.enter) {
        // logic
        var array =
            _chain.replaceAllMapped(RegExp(r'>$'), (match) => '').split('>');

        person = Person(
          // Tiene solo un apellido y un nombre
          documentNumber: array[0], // igual para ambos
          firstName: array[array.length == 5 ? 2 : 3], // (7) -> [3] (5) -> [2]
          middleName:
              array.length == 7 ? array[4] : null, // (7) -> [4] (5) -> null
          lastName: array[1], // igual para ambos
          surName:
              array.length == 7 ? array[2] : null, // (7) -> [2] (5) -> null
          birthDate: array[array.length == 5 ? 4 : 6], // (7) -> [6] (5) -> [4]
          sex: array[array.length == 5 ? 3 : 5], // (7) -> [5] (5) -> [3]
        );
        // Creamos la persona y seguimos el flujo
        personGateway.post(person).then((value) => {
              Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(
                      builder: (context) => Selection(
                            person: value,
                          )))
            });
      } else if (event.logicalKey == LogicalKeyboardKey.tab) {
        _chain += '>';
      } else if (!event.logicalKey.isAutogenerated) {
        _chain += event.character ?? '';
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    FocusScope.of(context).requestFocus(_focusNode);
    return Scaffold(
        body: RawKeyboardListener(
            focusNode: _focusNode,
            onKey: _handleKeyEvent,
            child: MainLayout(
              child: Row(
                mainAxisSize: MainAxisSize.max,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Card(
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(30),
                    ),
                    elevation: 2,
                    child: Container(
                        width: 900,
                        margin: EdgeInsets.all(5),
                        decoration: BoxDecoration(
                            borderRadius:
                                BorderRadius.all(Radius.circular(30))),
                        child: Padding(
                          padding: EdgeInsets.symmetric(
                            horizontal: 20,
                          ),
                          child: Column(
                            mainAxisSize: MainAxisSize.min,
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Row(
                                mainAxisSize: MainAxisSize.max,
                                children: [
                                  Image.asset(
                                    'assets/images/document_icon.jpeg',
                                    width: 160,
                                    height: 160,
                                  ),
                                  SizedBox(
                                    width: 10,
                                  ),
                                  Column(
                                    mainAxisSize: MainAxisSize.min,
                                    mainAxisAlignment: MainAxisAlignment.start,
                                    children: [
                                      Text(
                                        "Escanea tu documento",
                                        style: TextStyle(
                                            fontSize: 24,
                                            fontWeight: FontWeight.bold),
                                      ),
                                      SizedBox(
                                        height: 20,
                                      ),
                                      Text(
                                        "Ubica la parte trasera de tu documento en el lector de codigo de barras",
                                        style: TextStyle(fontSize: 18),
                                      ),
                                    ],
                                  )
                                ],
                              ),
                              Divider(),
                              Image.asset(
                                'assets/images/document.jpeg',
                                width: 300,
                                height: 300,
                              ),
                            ],
                          ),
                        )),
                  ),
                ],
              ),
            )));
  }
}
